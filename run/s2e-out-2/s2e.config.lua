--[[
This is the main S2E configuration file
=======================================

This file was automatically generated by s2e-env at 2017-09-28 05:24:24.577899.
Changes can be made by the user where appropriate.
]]--

-------------------------------------------------------------------------------
-- This section configures the S2E engine.
s2e = {
    logging = {
        -- Possible values include "info", "warn", "debug", "none".
        -- See Logging.h in libs2ecore.
        console = "debug",
        logLevel = "debug",
    },

    -- All the cl::opt options defined in the engine can be tweaked here.
    -- This can be left empty most of the time.
    -- Most of the options can be found in S2EExecutor.cpp and Executor.cpp.
    kleeArgs = {
        "--use-concolic-execution=true",
        "--use-dfs-search=true",
    },
}

-- Declare empty plugin settings. They will be populated in the rest of
-- the configuration file.
plugins = {}
pluginsConfig = {}

-- Include various convenient functions
dofile('library.lua')

-------------------------------------------------------------------------------
-- This plugin contains the core custom instructions.
-- Some of these include s2e_make_symbolic, s2e_kill_state, etc.
-- You always want to have this plugin included.

add_plugin("ConcolicExploreSearcher")

pluginsConfig.ConcolicExploreSearcher = {
	PathTestCases='/tmp',
	TotalTbs=1000000,
    TimeOut = 900,
    GenConstraint = false;
	BasicBlocks={
        entry_1471984 = { 4274920, 4274927 },
        entry_1471983 = { 4217456, 4217461 },
        entry_1471982 = { 4222072, 4222081 },
        entry_1471981 = { 4317776, 4317796 },
        entry_1471980 = { 4274396, 4274412 },
        entry_1471979 = { 4316417, 4316422 },
        entry_1471978 = { 4272561, 4272609 },
        entry_1471977 = { 4257289, 4257349 },
        entry_1471976 = { 4200912, 4200912 },
        entry_1471975 = { 4322072, 4322091 },
        entry_1471974 = { 4220152, 4220198 },
        entry_1471973 = { 4222512, 4222520 },
        entry_1471972 = { 4412796, 4412810 },
        entry_1471971 = { 4283988, 4284160 },
        entry_1471970 = { 4219187, 4219197 },
        entry_1471969 = { 4325576, 4325585 },
        entry_1471968 = { 4202723, 4202748 },
        entry_1471967 = { 4316235, 4316255 },
        entry_1471966 = { 4320976, 4320989 },
        entry_1471965 = { 4315456, 4315473 },
        entry_1471964 = { 4217466, 4217479 },
        entry_1471963 = { 4236664, 4236679 },
        entry_1471962 = { 4322152, 4322172 },
        entry_1471961 = { 4315544, 4315564 },
        entry_1471960 = { 4220892, 4220920 },
        entry_1471959 = { 4237849, 4237857 },
        entry_1471958 = { 4237127, 4237141 },
        entry_1471957 = { 4207288, 4207297 },
        entry_1471956 = { 4233708, 4233719 },
        entry_1471955 = { 4216839, 4216842 },
        entry_1471954 = { 4316154, 4316224 },
        entry_1471953 = { 4220800, 4220815 },
        entry_1471952 = { 4208152, 4208159 },
        entry_1471951 = { 4220240, 4220297 },
        entry_1471950 = { 4200992, 4200992 },
        entry_1471949 = { 4225156, 4225217 },
        entry_1471905 = { 4233824, 4233833 },
        entry_1471904 = { 4220128, 4220150 },
        entry_1471903 = { 4284722, 4284735 },
        entry_1471902 = { 4317801, 4317821 },
        entry_1471901 = { 4293351, 4293446 },
        entry_1471900 = { 4201280, 4201308 },
        entry_1471899 = { 4200768, 4200768 },
        entry_1471898 = { 4281387, 4281395 },
        entry_1471897 = { 4321225, 4321249 },
        entry_1471896 = { 4233887, 4233898 },
        entry_1471895 = { 4234544, 4234599 },
        entry_1471894 = { 4284432, 4284447 },
        entry_1471893 = { 4273559, 4273563 },
        entry_1471892 = { 4315770, 4315773 },
        entry_1471891 = { 4321541, 4321546 },
        entry_1471890 = { 4215528, 4215597 },
        entry_1471889 = { 4322024, 4322043 },
        entry_1471888 = { 4217504, 4217523 },
        entry_1471887 = { 4402294, 4402369 },
        entry_1471886 = { 4272928, 4272965 },
        entry_1471885 = { 4221920, 4221963 },
        entry_1471884 = { 4274933, 4274941 },
        entry_1471883 = { 4208184, 4208191 },
        entry_1471882 = { 4223717, 4223732 },
        entry_1471881 = { 4322048, 4322067 },
        entry_1471880 = { 4202531, 4202544 },
        entry_1471879 = { 4237480, 4237496 },
        entry_1471878 = { 4322572, 4322580 },
        entry_1471877 = { 4274439, 4274452 },
        entry_1471876 = { 4200416, 4200416 },
        entry_1471875 = { 4202767, 4202808 },
        entry_1471874 = { 4315110, 4315136 },
        entry_1471873 = { 4202680, 4202717 },
        entry_1471872 = { 4317751, 4317771 },
        entry_1471871 = { 4321072, 4321099 },
        entry_1471870 = { 4318834, 4318849 },
        entry_1471869 = { 4234392, 4234397 },
        entry_1471868 = { 4275232, 4275267 },
        entry_1471867 = { 4284346, 4284354 },
        entry_1471866 = { 4272677, 4272734 },
        entry_1471865 = { 4321798, 4321812 },
        entry_1471864 = { 4253216, 4253252 },
        entry_1471863 = { 4316643, 4316655 },
        entry_1471862 = { 4273571, 4273575 },
        entry_1471861 = { 4200272, 4200272 },
        entry_1471860 = { 4223433, 4223438 },
        entry_1471859 = { 4234488, 4234500 },
        entry_1471858 = { 4202287, 4202294 },
        entry_1471857 = { 4321705, 4321737 },
        entry_1471856 = { 4316348, 4316378 },
        entry_1471855 = { 4318742, 4318747 },
        entry_1471854 = { 4216857, 4216871 },
        entry_1471853 = { 4217225, 4217244 },
        entry_1471852 = { 4202550, 4202587 },
        entry_1471851 = { 4322613, 4322626 },
        entry_1471850 = { 4207328, 4207336 },
        entry_1471849 = { 4220496, 4220685 },
        entry_1471848 = { 4321552, 4321572 },
        entry_1471847 = { 4222089, 4222110 },
        entry_1471846 = { 4233600, 4233612 },
        entry_1471845 = { 4320910, 4320923 },
        entry_1471844 = { 4284336, 4284341 },
        entry_1471843 = { 4321928, 4321947 },
        entry_1471842 = { 4236153, 4236172 },
        entry_1471841 = { 4233728, 4233739 },
        entry_1471840 = { 4284479, 4284501 },
        entry_1471839 = { 4233424, 4233482 },
        entry_1471838 = { 4273266, 4273286 },
        entry_1471837 = { 4321867, 4321872 },
        entry_1471836 = { 4234053, 4234053 },
        entry_1471835 = { 4200144, 4200144 },
        entry_1471834 = { 4221636, 4221649 },
        entry_1471833 = { 4285973, 4285998 },
        entry_1471832 = { 4233508, 4233521 },
        entry_1471831 = { 4275280, 4275284 },
        entry_1471830 = { 4200256, 4200256 },
        entry_1471829 = { 4284232, 4284257 },
        entry_1471828 = { 4216848, 4216855 },
        entry_1471827 = { 4223738, 4223748 },
        entry_1471826 = { 4217931, 4217939 },
        entry_1471825 = { 4200432, 4200432 },
        entry_1471824 = { 4201830, 4201840 },
        entry_1471823 = { 4254064, 4254068 },
        entry_1471822 = { 4317000, 4317023 },
        entry_1471821 = { 4253302, 4253322 },
        entry_1471820 = { 4235745, 4235761 },
        entry_1471819 = { 4223418, 4223428 },
        entry_1471818 = { 4321168, 4321188 },
        entry_1471817 = { 4234309, 4234313 },
        entry_1471816 = { 4281402, 4281409 },
        entry_1471815 = { 4315569, 4315589 },
        entry_1471814 = { 4317826, 4317846 },
        entry_1471813 = { 4283835, 4283904 },
        entry_1471812 = { 4316535, 4316565 },
        entry_1471811 = { 4253548, 4253554 },
        entry_1471810 = { 4318049, 4318064 },
        entry_1471809 = { 4401968, 4401985 },
        entry_1471808 = { 4293291, 4293326 },
        entry_1471807 = { 4235696, 4235702 },
        entry_1471806 = { 4254080, 4254084 },
        entry_1471805 = { 4284506, 4284568 },
        entry_1471804 = { 4321742, 4321756 },
        entry_1471803 = { 4234036, 4234047 },
        entry_1471802 = { 4215608, 4215673 },
        entry_1471801 = { 4284320, 4284330 },
        entry_1471800 = { 4253408, 4253414 },
        entry_1471799 = { 4320895, 4320908 },
        entry_1471798 = { 4202309, 4202316 },
        entry_1471797 = { 4321602, 4321619 },
        entry_1471796 = { 4225425, 4225429 },
        entry_1471795 = { 4315669, 4315689 },
        entry_1471794 = { 4322120, 4322147 },
        entry_1471793 = { 4234472, 4234477 },
        entry_1471792 = { 4225110, 4225133 },
        entry_1471791 = { 4237088, 4237125 },
        entry_1471790 = { 4220880, 4220890 },
        entry_1471789 = { 4253584, 4253604 },
        entry_1471788 = { 4315043, 4315074 },
        entry_1471787 = { 4222528, 4222531 },
        entry_1471786 = { 4282551, 4282609 },
        entry_1471785 = { 4273056, 4273115 },
        entry_1471784 = { 4222083, 4222087 },
        entry_1471783 = { 4200464, 4200464 },
        entry_1471782 = { 4284200, 4284220 },
        entry_1471781 = { 4318397, 4318427 },
        entry_1471780 = { 4200160, 4200160 },
        entry_1471779 = { 4220111, 4220125 },
        entry_1471778 = { 4316956, 4316976 },
        entry_1471777 = { 4216816, 4216837 },
        entry_1471776 = { 4318119, 4318138 },
        entry_1471775 = { 4318753, 4318773 },
        entry_1471774 = { 4275743, 4275773 },
        entry_1471773 = { 4321391, 4321411 },
        entry_1471772 = { 4225006, 4225026 },
        entry_1471771 = { 4321441, 4321461 },
        entry_1471770 = { 4207180, 4207192 },
        entry_1471769 = { 4412876, 4412983 },
        entry_1471768 = { 4224019, 4224051 },
        entry_1471767 = { 4321577, 4321597 },
        entry_1471766 = { 4237815, 4237830 },
        entry_1471765 = { 4203199, 4203214 },
        entry_1471764 = { 4400444, 4400486 },
        entry_1471763 = { 4315296, 4315320 },
        entry_1471762 = { 4200080, 4200080 },
        entry_1471761 = { 4318069, 4318089 },
        entry_1471760 = { 4284376, 4284384 },
        entry_1471759 = { 4318218, 4318220 },
        entry_1471758 = { 4233971, 4233979 },
        entry_1471757 = { 4272878, 4272898 },
        entry_1471756 = { 4235712, 4235724 },
        entry_1471755 = { 4320929, 4320971 },
        entry_1471754 = { 4210217, 4210220 },
        entry_1471753 = { 4203138, 4203162 },
        entry_1471752 = { 4315594, 4315614 },
        entry_1471751 = { 4321665, 4321700 },
        entry_1471750 = { 4400369, 4400386 },
        entry_1471749 = { 4220208, 4220235 },
        entry_1471748 = { 4208032, 4208052 },
        entry_1471747 = { 4200592, 4200592 },
        entry_1471746 = { 4218946, 4218967 },
        entry_1471745 = { 4315434, 4315451 },
        entry_1471744 = { 4219680, 4219722 },
        entry_1471743 = { 4208168, 4208175 },
        entry_1471742 = { 4222272, 4222300 },
        entry_1471741 = { 4215599, 4215606 },
        entry_1471740 = { 4219056, 4219099 },
        entry_1471739 = { 4321351, 4321386 },
        entry_1471738 = { 4203093, 4203111 },
        entry_1471737 = { 4202345, 4202352 },
        entry_1471736 = { 4272876, 4272876 },
        entry_1471735 = { 4221654, 4221682 },
        entry_1471734 = { 4284360, 4284370 },
        entry_1471733 = { 4322267, 4322309 },
        entry_1471732 = { 4220303, 4220314 },
        entry_1471731 = { 4208270, 4208316 },
        entry_1471730 = { 4235888, 4235900 },
        entry_1471729 = { 4199880, 4199894 },
        entry_1471728 = { 4207164, 4207168 },
        entry_1471727 = { 4200640, 4200640 },
        entry_1471726 = { 4321033, 4321067 },
        entry_1471725 = { 4281472, 4281480 },
        entry_1471724 = { 4220299, 4220301 },
        entry_1471723 = { 4321903, 4321923 },
        entry_1471722 = { 4335683, 4335722 },
        entry_1471721 = { 4315744, 4315765 },
        entry_1471720 = { 4253505, 4253516 },
        entry_1471719 = { 4236712, 4236717 },
        entry_1471718 = { 4221744, 4221840 },
        entry_1471717 = { 4200704, 4200704 },
        entry_1471716 = { 4400248, 4400281 },
        entry_1471715 = { 4264339, 4264354 },
        entry_1471714 = { 4254090, 4254094 },
        entry_1471713 = { 4315412, 4315429 },
        entry_1471712 = { 4220361, 4220379 },
        entry_1471711 = { 4238672, 4238704 },
        entry_1471710 = { 4223705, 4223711 },
        entry_1471709 = { 4321303, 4321322 },
        entry_1471708 = { 4222043, 4222065 },
        entry_1471707 = { 4202506, 4202526 },
        entry_1471706 = { 4284819, 4284850 },
        entry_1471705 = { 4214718, 4214721 },
        entry_1471704 = { 4318802, 4318829 },
        entry_1471703 = { 4282930, 4282999 },
        entry_1471702 = { 4321952, 4321971 },
        entry_1471701 = { 4261200, 4261434 },
        entry_1471700 = { 4223550, 4223570 },
        entry_1471699 = { 4207232, 4207240 },
        entry_1471698 = { 4236508, 4236519 },
        entry_1471697 = { 4254344, 4254376 },
        entry_1471696 = { 4215728, 4215763 },
        entry_1471695 = { 4320454, 4320474 },
        entry_1471694 = { 4401992, 4402012 },
        entry_1471693 = { 4401905, 4401923 },
        entry_1471692 = { 4234440, 4234445 },
        entry_1471691 = { 4315694, 4315714 },
        entry_1471690 = { 4225220, 4225242 },
        entry_1471689 = { 4321012, 4321031 },
        entry_1471688 = { 4316768, 4316794 },
        entry_1471687 = { 4237220, 4237232 },
        entry_1471686 = { 4219392, 4219437 },
        entry_1471685 = { 4402440, 4402520 },
        entry_1471684 = { 4400492, 4400505 },
        entry_1471683 = { 4200064, 4200064 },
        entry_1471682 = { 4325520, 4325566 },
        entry_1471681 = { 4219153, 4219172 },
        entry_1471680 = { 4234283, 4234287 },
        entry_1471679 = { 4316424, 4316456 },
        entry_1471678 = { 4273334, 4273339 },
        entry_1471677 = { 4273848, 4273881 },
        entry_1471676 = { 4321104, 4321131 },
        entry_1471675 = { 4272967, 4272987 },
        entry_1471674 = { 4293451, 4293459 },
        entry_1471673 = { 4217542, 4217542 },
        entry_1471672 = { 4306389, 4306410 },
        entry_1471671 = { 4234260, 4234271 },
        entry_1471670 = { 4293472, 4293497 },
        entry_1471669 = { 4234516, 4234524 },
        entry_1471668 = { 4223858, 4223910 },
        entry_1471667 = { 4264356, 4264388 },
        entry_1471666 = { 4202466, 4202480 },
        entry_1471665 = { 4321878, 4321898 },
        entry_1471664 = { 4318238, 4318255 },
        entry_1471663 = { 4203116, 4203136 },
        entry_1471662 = { 4200224, 4200224 },
        entry_1471948 = { 4221730, 4221742 },
        entry_1471947 = { 4219660, 4219676 },
        entry_1471946 = { 4225447, 4225457 },
        entry_1471945 = { 4202032, 4202042 },
        entry_1471944 = { 4217552, 4217606 },
        entry_1471943 = { 4274884, 4274888 },
        entry_1471942 = { 4233646, 4233657 },
        entry_1471941 = { 4315719, 4315739 },
        entry_1471940 = { 4253464, 4253475 },
        entry_1471939 = { 4274361, 4274390 },
        entry_1471938 = { 4322670, 4322774 },
        entry_1471937 = { 4318024, 4318044 },
        entry_1471936 = { 4236264, 4236291 },
        entry_1471935 = { 4318292, 4318297 },
        entry_1471934 = { 4225248, 4225253 },
        entry_1471933 = { 4217388, 4217449 },
        entry_1471932 = { 4207312, 4207320 },
        entry_1471931 = { 4233792, 4233797 },
        entry_1471930 = { 4272805, 4272855 },
        entry_1471929 = { 4237342, 4237367 },
        entry_1471928 = { 4217787, 4217817 },
        entry_1471927 = { 4224947, 4224995 },
        entry_1471926 = { 4320479, 4320503 },
        entry_1471925 = { 4234341, 4234368 },
        entry_1471924 = { 4254441, 4254504 },
        entry_1471923 = { 4237181, 4237193 },
        entry_1471922 = { 4235775, 4235779 },
        entry_1471921 = { 4254416, 4254435 },
        entry_1471920 = { 4401791, 4401849 },
        entry_1471919 = { 4208096, 4208103 },
        entry_1471918 = { 4325616, 4325625 },
        entry_1471917 = { 4200688, 4200688 },
        entry_1471916 = { 4218126, 4218146 },
        entry_1471915 = { 4273292, 4273315 },
        entry_1471914 = { 4272616, 4272671 },
        entry_1471913 = { 4202143, 4202227 },
        entry_1471912 = { 4285889, 4285950 },
        entry_1471911 = { 4284390, 4284422 },
        entry_1471910 = { 4316301, 4316323 },
        entry_1471909 = { 4321646, 4321660 },
        entry_1471908 = { 4201040, 4201091 },
        entry_1471907 = { 4233557, 4233561 },
        entry_1471906 = { 4318503, 4318518 },
        entry_1471661 = { 4315644, 4315664 },
        entry_1471660 = { 4223590, 4223643 },
        entry_1471659 = { 4253497, 4253499 },
        entry_1471658 = { 4321491, 4321511 },
        entry_1471657 = { 4202381, 4202388 },
        entry_1471656 = { 4234023, 4234034 },
        entry_1471655 = { 4284452, 4284473 },
        entry_1471654 = { 4221848, 4221900 },
        entry_1471653 = { 4200112, 4200112 },
        entry_1471652 = { 4322238, 4322262 },
        entry_1471651 = { 4315619, 4315639 },
        entry_1471650 = { 4253572, 4253578 },
        entry_1471649 = { 4282892, 4282905 },
        entry_1471648 = { 4222306, 4222367 },
        entry_1471647 = { 4217944, 4217952 },
        entry_1471646 = { 4275728, 4275738 },
        entry_1471645 = { 4234376, 4234381 },
        entry_1471644 = { 4321254, 4321274 },
        entry_1471643 = { 4217529, 4217540 },
        entry_1471642 = { 4253440, 4253451 },
        entry_1471641 = { 4273887, 4273918 },
        entry_1471640 = { 4200096, 4200096 },
        entry_1471639 = { 4273133, 4273183 },
        entry_1471638 = { 4264393, 4264460 },
        entry_1471637 = { 4220383, 4220397 },
        entry_1471636 = { 4335593, 4335620 },
        entry_1471635 = { 4202399, 4202406 },
        entry_1471634 = { 4321193, 4321220 },
        entry_1471633 = { 4208664, 4208670 },
        entry_1471632 = { 4316932, 4316951 },
        entry_1471631 = { 4219728, 4219770 },
        entry_1471630 = { 4214784, 4214794 },
        entry_1471629 = { 4233659, 4233670 },
        entry_1471628 = { 4216496, 4216550 },
        entry_1471627 = { 4220095, 4220105 },
        entry_1471626 = { 4203167, 4203194 },
        entry_1471625 = { 4322496, 4322570 },
        entry_1471624 = { 4200608, 4200608 },
        entry_1471623 = { 4315383, 4315407 },
        entry_1471622 = { 4237301, 4237330 },
        entry_1471621 = { 4253254, 4253271 },
        entry_1471620 = { 4233741, 4233752 },
        entry_1471619 = { 4214727, 4214779 },
        entry_1471618 = { 4220836, 4220864 },
        entry_1471617 = { 4199901, 4199905 },
        entry_1471616 = { 4275714, 4275722 },
        entry_1471615 = { 4202430, 4202438 },
        entry_1471614 = { 4321842, 4321862 },
        entry_1471613 = { 4272857, 4272870 },
        entry_1471612 = { 4316907, 4316927 },
        entry_1471611 = { 4273543, 4273547 },
        entry_1471610 = { 4225289, 4225310 },
        entry_1471609 = { 4285875, 4285883 },
        entry_1471608 = { 4320991, 4321010 },
        entry_1471607 = { 4284277, 4284294 },
        entry_1471606 = { 4318168, 4318188 },
        entry_1471605 = { 4284871, 4284899 },
        entry_1471604 = { 4210192, 4210200 },
        entry_1471603 = { 4318884, 4318919 },
        entry_1471602 = { 4235627, 4235668 },
        entry_1471601 = { 4315785, 4315845 },
        entry_1471600 = { 4215512, 4215522 },
        entry_1471599 = { 4234092, 4234100 },
        entry_1471598 = { 4253273, 4253296 },
        entry_1471597 = { 4237147, 4237163 },
        entry_1471596 = { 4322000, 4322019 },
        entry_1471595 = { 4318260, 4318279 },
        entry_1471594 = { 4321761, 4321793 },
        entry_1471593 = { 4253328, 4253394 },
        entry_1471592 = { 4322632, 4322652 },
        entry_1471591 = { 4315354, 4315378 },
        entry_1471590 = { 4321136, 4321163 },
        entry_1471589 = { 4200576, 4200576 },
        entry_1471588 = { 4321466, 4321486 },
        entry_1471587 = { 4223320, 4223349 },
        entry_1471586 = { 4219776, 4219784 },
        entry_1471585 = { 4272989, 4273054 },
        entry_1471584 = { 4223841, 4223856 },
        entry_1471583 = { 4274355, 4274358 },
        entry_1471582 = { 4283918, 4283945 },
        entry_1471581 = { 4219131, 4219151 },
        entry_1471580 = { 4210206, 4210211 },
        entry_1471579 = { 4322096, 4322115 },
        entry_1471578 = { 4224932, 4224943 },
        entry_1471577 = { 4220320, 4220343 },
        entry_1471576 = { 4200864, 4200864 },
        entry_1471575 = { 4321416, 4321436 },
        entry_1471574 = { 4315522, 4315539 },
        entry_1471573 = { 4321516, 4321536 },
        entry_1471572 = { 4317661, 4317696 },
        entry_1471571 = { 4234079, 4234086 },
        entry_1471570 = { 4217872, 4217888 },
        entry_1471569 = { 4321279, 4321298 },
        entry_1471568 = { 4283707, 4283731 },
        entry_1471567 = { 4236112, 4236124 },
        entry_1471566 = { 4225472, 4225476 },
        entry_1471565 = { 4222713, 4222730 },
        entry_1471564 = { 4219105, 4219125 },
        entry_1471563 = { 4222695, 4222704 },
        entry_1471562 = { 4216556, 4216661 },
        entry_1471561 = { 4222400, 4222421 },
        entry_1471560 = { 4237200, 4237210 },
        entry_1471559 = { 4225038, 4225049 },
        entry_1471558 = { 4284300, 4284308 },
        entry_1471557 = { 4209250, 4209256 },
        entry_1471556 = { 4321817, 4321837 },
        entry_1471555 = { 4225053, 4225099 },
        entry_1471554 = { 4322213, 4322233 },
        entry_1471553 = { 4222627, 4222647 },
        entry_1471552 = { 4321624, 4321641 },
        entry_1471551 = { 4317701, 4317721 },
        entry_1471550 = { 4281415, 4281461 },
        entry_1471549 = { 4207254, 4207266 },
        entry_1471548 = { 4236174, 4236178 },
        entry_1471547 = { 4235834, 4235844 },
        entry_1471546 = { 4217612, 4217719 },
        entry_1471545 = { 4236688, 4236703 },
        entry_1471544 = { 4283950, 4283982 },
        entry_1471543 = { 4234240, 4234254 },
        entry_1471542 = { 4274113, 4274210 },
        entry_1471541 = { 4200896, 4200896 },
        entry_1471540 = { 4274852, 4274856 },
        entry_1471539 = { 4236485, 4236506 },
        entry_1471538 = { 4221688, 4221710 },
        entry_1471537 = { 4200208, 4200208 },
        entry_1471536 = { 4222498, 4222506 },
        entry_1471535 = { 4316275, 4316281 },
        entry_1471534 = { 4223467, 4223509 },
        entry_1471533 = { 4215493, 4215501 },
        entry_1471532 = { 4274516, 4274541 },
        entry_1471531 = { 4274298, 4274341 },
        entry_1471530 = { 4235680, 4235690 },
        entry_1471529 = { 4225102, 4225108 },
        entry_1471528 = { 4235855, 4235886 },
        entry_1471527 = { 4223354, 4223407 },
        entry_1471526 = { 4236591, 4236601 },
        entry_1471525 = { 4272904, 4272921 },
        entry_1471524 = { 4234424, 4234429 },
        entry_1471523 = { 4233760, 4233771 },
        entry_1471522 = { 4223514, 4223545 },
        entry_1471521 = { 4238216, 4238312 },
        entry_1471520 = { 4316615, 4316637 },
        entry_1471519 = { 4284166, 4284191 },
    },
}

add_plugin("BaseInstructions")

-------------------------------------------------------------------------------
-- This plugin implements "shared folders" between the host and the guest.
-- Use it in conjunction with s2eget and s2eput guest tools in order to
-- transfer files between the guest and the host.

table.insert(plugins, "HostFiles")
pluginsConfig.HostFiles = {
    baseDirs = {
        "/opt/s2e/run/",
        
    },
    allowWrite = true,
}

-------------------------------------------------------------------------------
-- This plugin provides support for virtual machine introspection and binary
-- formats parsing. S2E plugins can use it when they need to extract
-- information from binary files that are either loaded in virtual memory
-- or stored on the host's file system.

-- add_plugin("Vmi")
-- pluginsConfig.Vmi = {
--     baseDirs = {
--         "/opt/s2e/run/",
        
--     },
-- }

-------------------------------------------------------------------------------
-- This plugin collects various execution statistics and sends them to a QMP
-- server that listens on an address:port configured by the S2E_QMP_SERVER
-- environment variable.
--
-- The "s2e run cb" command sets up such a server in order to display
-- stats on the dashboard.
--
-- You may also want to use this plugin to integrate S2E into a larger
-- system. The server could collect information about execution from different
-- S2E instances, filter them, and store them in a database.

-- add_plugin("WebServiceInterface")
-- pluginsConfig.WebServiceInterface = {
--     statsUpdateInterval = 2
-- }

-------------------------------------------------------------------------------
-- This is the main execution tracing plugin.
-- It generates the ExecutionTracer.dat file in the s2e-last folder.
-- That files contains trace information in a binary format. Other plugins can
-- hook into ExecutionTracer in order to insert custom tracing data.
--
-- This is a core plugin, you most likely always want to have it.

-- add_plugin("ExecutionTracer")

-------------------------------------------------------------------------------
-- This plugin records events about module loads/unloads and stores them
-- in ExecutionTracer.dat.
-- This is useful in order to map raw program counters and pids to actual
-- module names.

-- add_plugin("ModuleTracer")

-------------------------------------------------------------------------------
-- This is a generic plugin that let other plugins communicate with each other.
-- It is a simple key-value store.
--
-- The plugin has several modes of operation:
--
-- 1. local: runs an internal store private to each instance (default)
-- 2. distributed: the plugin interfaces with an actual key-value store server.
-- This allows different instances of S2E to communicate with each other.

-- add_plugin("KeyValueStore")

-------------------------------------------------------------------------------
-- Records the program counter of executed translation blocks.
-- Generates a json coverage file. This file can be later processed by other
-- tools to generate line coverage information. Please refer to the S2E
-- documentation for more details.

-- add_plugin("TranslationBlockCoverage")
-- pluginsConfig.TranslationBlockCoverage = {
--     writeCoverageOnStateKill = true
-- }

-------------------------------------------------------------------------------
-- Tracks execution of specific modules.
-- Analysis plugins are often interested only in small portions of the system,
-- typically the modules under analysis. This plugin filters out all core
-- events that do not concern the modules under analysis. This simplifies
-- code instrumentation.
-- Instead of listing individual modules, you can also track all modules by
-- setting configureAllModules = true

-- add_plugin("ModuleExecutionDetector")
-- pluginsConfig.ModuleExecutionDetector = {
--     mod_0 = {
--         moduleName = "cb",
--         kernelMode = false,
--     },
--     mod_1 = {
--         moduleName = "libc-2.19.so",
--         kernelMode = false,
--     },
-- }

-------------------------------------------------------------------------------
-- This plugin controls the forking behavior of S2E.

--add_plugin("ForkLimiter")
--pluginsConfig.ForkLimiter = {
--    -- How many times each program counter is allowed to fork.
--    -- -1 for unlimited.
--    maxForkCount = -1,

--    -- How many seconds to wait before allowing an S2E process
--    -- to spawn a child. When there are many states, S2E may
--    -- spawn itself into multiple processes in order to leverage
--    -- multiple cores on the host machine. When an S2E process A spawns
--    -- a process B, A and B each get half of the states.
--    --
--    -- In some cases, when states fork and terminate very rapidly,
--    -- one can see flash crowds of S2E instances. This decreases
--    -- execution efficiency. This parameter forces S2E to wait a few
--    -- seconds so that more states can accumulate in an instance
--    -- before spawning a process.
--    processForkDelay = 5,
--}

-------------------------------------------------------------------------------
-- This plugin tracks execution of processes.
-- This is the preferred way of tracking execution and will eventually replace
-- ModuleExecutionDetector.

-- add_plugin("ProcessExecutionDetector")
-- pluginsConfig.ProcessExecutionDetector = {
--     moduleNames = {
--         "cb",
--         "libc-2.19.so",
--     },
-- }

-------------------------------------------------------------------------------
-- MultiSearcher is a top-level searcher that allows switching between
-- different sub-searchers.

-- add_plugin("MultiSearcher")

-- CUPA stands for Class-Uniform Path Analysis. It is a searcher that groups
-- states into classes. Each time the searcher needs to pick a state, it first
-- chooses a class, then picks a state in that class. Classes can further be
-- subdivided into subclasses.
--
-- The advantage of CUPA over other searchers is that it gives similar weights
-- to different parts of the program. If one part forks a lot, a random searcher
-- would most likely pick a state from that hotspot, decreasing the probability
-- of choosing another state that may have better chance of covering new code.
-- CUPA avoids this problem by grouping similar states together.

-- add_plugin("CUPASearcher")
-- pluginsConfig.CUPASearcher = {
--     -- The order of classes is important, please refer to the plugin
--     -- source code and documentation for details on how CUPA works.
--     classes = {
        

--         -- A program under test may be composed of several binaries.
--         -- We want to give equal chance to all binaries, even if some of them
--         -- fork a lot more than others.
--         "pagedir",

--         -- Finally, group states by program counter at fork.
--         "pc",
--     },
--     logLevel="info"
-- }



-------------------------------------------------------------------------------
-- Function models help drastically reduce path explosion. A model is an
-- expression that efficiently encodes the behavior of a function. In imperative
-- languages, functions often have if-then-else branches and loops, which
-- may cause path explosion. A model compresses this into a single large
-- expression. Models are most suitable for side-effect-free functions that
-- fork a lot. Please refer to models.lua and the documentation for more details.

-- add_plugin("StaticFunctionModels")

-- pluginsConfig.StaticFunctionModels = {
--   modules = {}
-- }

-- g_function_models = {}
-- safe_load('models.lua')
-- pluginsConfig.StaticFunctionModels.modules = g_function_models


-- ========================================================================= --
-- ============== Target-specific configuration begins here. =============== --
-- ========================================================================= --

-------------------------------------------------------------------------------
-- LinuxMonitor is a plugin that monitors Linux events and exposes them
-- to other plugins in a generic way. Events include process load/termination,
-- thread events, signals, etc.
--
-- LinuxMonitor requires a custom Linux kernel with S2E extensions. This kernel
-- (and corresponding VM image) can be built with S2E tools. Please refer to
-- the documentation for more details.

-- add_plugin("LinuxMonitor")
-- pluginsConfig.LinuxMonitor = {
--     -- Kill the execution state when it encounters a segfault
--     terminateOnSegFault = true,

--     -- Kill the execution state when it encounters a trap
--     terminateOnTrap = true,
-- }

-------------------------------------------------------------------------------
-- This generates test cases when a state crashes or terminates.
-- If symbolic inputs consist of symbolic files, the test case generator writes
-- concrete files in the S2E output folder. These files can be used to
-- demonstrate the crash in a program, added to a test suite, etc.

-- add_plugin("TestCaseGenerator")
-- pluginsConfig.TestCaseGenerator = {
--     generateOnStateKill = true,
--     generateOnSegfault = true
-- }
